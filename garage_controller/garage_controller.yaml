esphome:
  name: garage_controller
  platform: ESP32
  board: featheresp32

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

binary_sensor:
  - platform: status
    name: "Garage Controller Status"

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "garage_controller"

ota:
  password: "garage_controller"

sensor:
  - platform: dht
    pin: 21
    model: DHT22
    temperature:
      name: "Garage Temperature"
    humidity:
      name: "Garage Humidity"
    update_interval: 60s

i2c:
  sda: SDA
  scl: SCL
  scan: True
  id: bus_a

# 0.0 = 0% = CLOSED
# 1.0 = 100% = OPEN
binary_sensor:
# Garage Bay 1
  - platform: gpio
    name: "Garage Bay 1 Opened"
    i2c_id: bus_a
    on_press:
      then:
        - cover.template.publish:
          id: garage_cover_1
          state: OPEN
          position: 100%
    on_release:
      then:
        - cover.template.publish:
          id: garage_cover_1
          position: 50%
          current_operation: CLOSING

  - platform: gpio
    name: "Garage Bay 1 Closed"
    i2c_id: bus_a
    on_press:
      then:
        - cover.template.publish:
          id: garage_cover_1
          state: CLOSED
          position: 0%
    on_release:
      then:
        - cover.template.publish:
          id: garage_cover_1
          position: 50%
          current_operation: OPENING

# Garage Bay 2
  - platform: gpio
    name: "Garage Bay 2 Opened"
    i2c_id: bus_a
    on_press:
      then:
        - cover.template.publish:
          id: garage_cover_2
          state: OPEN
          position: 100%
    on_release:
      then:
        - cover.template.publish:
          id: garage_cover_2
          position: 50%
          current_operation: CLOSING

  - platform: gpio
    i2c_id: bus_a
    name: "Garage Bay 2 Closed"
    on_press:
      then:
        - cover.template.publish:
          id: garage_cover_2
          state: CLOSED
          position: 0%
    on_release:
      then:
        - cover.template.publish:
          id: garage_cover_2
          position: 50%
          current_operation: OPENING

# Garage Bay 3
  - platform: gpio
    name: "Garage Bay 3 Opened"
    i2c_id: bus_a
    on_press:
      then:
        - cover.template.publish:
          id: garage_cover_3
          state: OPEN
          position: 100%
    on_release:
      then:
        - cover.template.publish:
          id: garage_cover_3
          position: 50%
          current_operation: CLOSING

  - platform: gpio
    i2c_id: bus_a
    name: "Garage Bay 3 Closed"
    on_press:
      then:
        - cover.template.publish:
          id: garage_cover_3
          state: CLOSED
          position: 0%
    on_release:
      then:
        - cover.template.publish:
          id: garage_cover_3
          position: 50%
          current_operation: OPENING

# Define our relays. Keep them private.
switch:
  - platform: gpio
    i2c_id: bus_a
    address: 0x27
    id: relay_1
  - platform: gpio
    i2c_id: bus_a
    address: 0x27
    id: relay_2
  - platform: gpio
    i2c_id: bus_a
    address: 0x27
    id: relay_3
  - platform: gpio
    i2c_id: bus_a
    address: 0x27
    id: relay_4

cover:
  - platform: template
    name: "Garage Door 1"
    device_class: garage
    id: garage_cover_1
    open_action:
      - switch.turn_on: relay_1
      - delay: 500ms
      - switch.turn_of: relay_1
    close_action:
      - switch.turn_on: relay_1
      - delay: 500ms
      - switch.turn_of: relay_1
    stop_action:
      - switch.turn_on: relay_1
      - delay: 500ms
      - switch.turn_off: relay_1
  - platform: template
    name: "Garage Door 2"
    device_class: garage
    id: garage_cover_2
    open_action:
      - switch.turn_on: relay_2
      - delay: 500ms
      - switch.turn_of: relay_2
    close_action:
      - switch.turn_on: relay_2
      - delay: 500ms
      - switch.turn_of: relay_2
    stop_action:
      - switch.turn_on: relay_2
      - delay: 500ms
      - switch.turn_off: relay_2
  - platform: template
    name: "Garage Door 3"
    device_class: garage
    id: garage_cover_3
    open_action:
      - switch.turn_on: relay_3
      - delay: 500ms
      - switch.turn_of: relay_3
    close_action:
      - switch.turn_on: relay_3
      - delay: 500ms
      - switch.turn_of: relay_3
    stop_action:
      - switch.turn_on: relay_3
      - delay: 500ms
      - switch.turn_off: relay_3